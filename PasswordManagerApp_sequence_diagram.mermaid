sequenceDiagram
    %% Authentication Flow
    participant User
    participant MainActivity
    participant MainViewModel
    participant AuthManager
    participant MasterPasswordManager
    participant BiometricPrompt
    participant SecurityManager
    participant AppDatabase
    
    %% App Launch and Authentication
    User->>MainActivity: Launch App
    MainActivity->>MainViewModel: checkAuthenticationState()
    MainViewModel->>AuthManager: isAppUnlocked()
    AuthManager-->>MainViewModel: false (app locked)
    MainViewModel-->>MainActivity: update UI state (show lock screen)
    
    alt Authentication with Master Password
        User->>MainActivity: Enter Master Password
        MainActivity->>MainViewModel: authenticate(PasswordCredential)
        MainViewModel->>AuthManager: authenticateWithPassword(password)
        AuthManager->>MasterPasswordManager: validateMasterPassword(password)
        MasterPasswordManager-->>AuthManager: true/false (valid/invalid)
        AuthManager-->>MainViewModel: Authentication result
        MainViewModel-->>MainActivity: update UI state
    else Authentication with Biometrics
        User->>MainActivity: Tap Fingerprint/Face ID button
        MainActivity->>BiometricPrompt: authenticate()
        BiometricPrompt-->>MainActivity: onAuthSucceeded/onAuthFailed
        MainActivity->>MainViewModel: authenticate(BiometricCredential)
        MainViewModel->>AuthManager: authenticateWithBiometric()
        AuthManager-->>MainViewModel: Authentication result
        MainViewModel-->>MainActivity: update UI state
    end
    
    %% Navigate to Main Content (after successful auth)
    MainActivity->>MainActivity: navigate to PasswordListFragment
    
    %% Password Management Flow
    participant PasswordListFragment
    participant PasswordViewModel
    participant PasswordRepository
    participant PasswordDao
    
    %% Load Password List
    PasswordListFragment->>PasswordViewModel: loadPasswords()
    PasswordViewModel->>PasswordRepository: getAllPasswords()
    PasswordRepository->>PasswordDao: getAllPasswords()
    PasswordDao->>AppDatabase: query passwords table
    AppDatabase-->>PasswordDao: encrypted password entries
    PasswordDao-->>PasswordRepository: Flow<List<PasswordEntry>>
    PasswordRepository->>SecurityManager: decrypt each password entry
    SecurityManager-->>PasswordRepository: decrypted password entries
    PasswordRepository-->>PasswordViewModel: Flow<List<PasswordEntry>>
    PasswordViewModel-->>PasswordListFragment: display passwords
    
    %% Add New Password
    User->>PasswordListFragment: Tap "Add Password" button
    PasswordListFragment->>AddEditPasswordFragment: navigate to add screen
    User->>AddEditPasswordFragment: Fill password details
    User->>AddEditPasswordFragment: Tap "Save" button
    AddEditPasswordFragment->>PasswordViewModel: addPassword(passwordEntry)
    PasswordViewModel->>PasswordRepository: insert(passwordEntry)
    PasswordRepository->>SecurityManager: encrypt(password data)
    SecurityManager-->>PasswordRepository: encrypted password data
    PasswordRepository->>PasswordDao: insert(encryptedPasswordEntry)
    PasswordDao->>AppDatabase: insert into passwords table
    AppDatabase-->>PasswordDao: insertion result
    PasswordDao-->>PasswordRepository: password ID
    PasswordRepository-->>PasswordViewModel: password ID
    PasswordViewModel-->>AddEditPasswordFragment: password saved
    AddEditPasswordFragment->>PasswordListFragment: navigate back
    
    %% View Password Details
    User->>PasswordListFragment: Tap on password entry
    PasswordListFragment->>PasswordDetailsFragment: navigate with passwordId
    PasswordDetailsFragment->>PasswordViewModel: getPasswordById(passwordId)
    PasswordViewModel->>PasswordRepository: getPasswordById(passwordId)
    PasswordRepository->>PasswordDao: getById(passwordId)
    PasswordDao->>AppDatabase: query password by ID
    AppDatabase-->>PasswordDao: encrypted password entry
    PasswordDao-->>PasswordRepository: encrypted password entry
    PasswordRepository->>SecurityManager: decrypt(passwordEntry)
    SecurityManager-->>PasswordRepository: decrypted password entry
    PasswordRepository-->>PasswordViewModel: password entry
    PasswordViewModel-->>PasswordDetailsFragment: display password details
    
    %% Edit Password
    User->>PasswordDetailsFragment: Tap "Edit" button
    PasswordDetailsFragment->>AddEditPasswordFragment: navigate with passwordEntry
    User->>AddEditPasswordFragment: Modify password details
    User->>AddEditPasswordFragment: Tap "Save" button
    AddEditPasswordFragment->>PasswordViewModel: updatePassword(passwordEntry)
    PasswordViewModel->>PasswordRepository: update(passwordEntry)
    PasswordRepository->>SecurityManager: encrypt(password data)
    SecurityManager-->>PasswordRepository: encrypted password data
    PasswordRepository->>PasswordDao: update(encryptedPasswordEntry)
    PasswordDao->>AppDatabase: update passwords table
    AppDatabase-->>PasswordDao: update result
    PasswordDao-->>PasswordRepository: rows affected
    PasswordRepository-->>PasswordViewModel: update result
    PasswordViewModel-->>AddEditPasswordFragment: password updated
    AddEditPasswordFragment->>PasswordDetailsFragment: navigate back
    
    %% Delete Password
    User->>PasswordDetailsFragment: Tap "Delete" button
    PasswordDetailsFragment->>ConfirmDialog: show confirmation dialog
    User->>ConfirmDialog: Confirm deletion
    ConfirmDialog->>PasswordViewModel: deletePassword(passwordEntry)
    PasswordViewModel->>PasswordRepository: delete(passwordEntry)
    PasswordRepository->>PasswordDao: delete(passwordEntry)
    PasswordDao->>AppDatabase: delete from passwords table
    AppDatabase-->>PasswordDao: deletion result
    PasswordDao-->>PasswordRepository: rows affected
    PasswordRepository-->>PasswordViewModel: delete result
    PasswordViewModel-->>PasswordDetailsFragment: password deleted
    PasswordDetailsFragment->>PasswordListFragment: navigate back
    
    %% Credit Card Management Flow (similar to Passwords)
    participant CreditCardListFragment
    participant CreditCardViewModel
    participant CreditCardRepository
    participant CreditCardDao
    
    %% Load Credit Cards List
    CreditCardListFragment->>CreditCardViewModel: loadCreditCards()
    CreditCardViewModel->>CreditCardRepository: getAllCreditCards()
    CreditCardRepository->>CreditCardDao: getAllCreditCards()
    CreditCardDao->>AppDatabase: query credit_cards table
    AppDatabase-->>CreditCardDao: encrypted credit card entries
    CreditCardDao-->>CreditCardRepository: Flow<List<CreditCardEntry>>
    CreditCardRepository->>SecurityManager: decrypt each credit card entry
    SecurityManager-->>CreditCardRepository: decrypted credit card entries
    CreditCardRepository-->>CreditCardViewModel: Flow<List<CreditCardEntry>>
    CreditCardViewModel-->>CreditCardListFragment: display credit cards
    
    %% Settings and Security Flow
    participant SettingsFragment
    participant SettingsViewModel
    
    %% Change Master Password
    User->>SettingsFragment: Navigate to Security Settings
    User->>SettingsFragment: Tap "Change Master Password"
    SettingsFragment->>ChangePasswordDialog: show dialog
    User->>ChangePasswordDialog: Enter old and new passwords
    ChangePasswordDialog->>SettingsViewModel: changeMasterPassword(old, new)
    SettingsViewModel->>AuthManager: changeMasterPassword(old, new)
    AuthManager->>MasterPasswordManager: validateMasterPassword(old)
    MasterPasswordManager-->>AuthManager: valid/invalid
    
    alt Valid Old Password
        AuthManager->>MasterPasswordManager: setMasterPassword(new)
        MasterPasswordManager-->>AuthManager: password changed
        AuthManager-->>SettingsViewModel: true (success)
        SettingsViewModel-->>ChangePasswordDialog: password changed
    else Invalid Old Password
        AuthManager-->>SettingsViewModel: false (failed)
        SettingsViewModel-->>ChangePasswordDialog: wrong password
    end
    
    %% Export Backup
    User->>SettingsFragment: Tap "Export Data"
    SettingsFragment->>ExportDialog: show dialog
    User->>ExportDialog: Enter backup password
    ExportDialog->>SettingsViewModel: exportData(password, file)
    SettingsViewModel->>BackupManager: exportToFile(file, password)
    BackupManager->>PasswordRepository: getAllPasswords()
    PasswordRepository-->>BackupManager: all password entries
    BackupManager->>CreditCardRepository: getAllCreditCards()
    CreditCardRepository-->>BackupManager: all credit card entries
    BackupManager->>SecurityManager: encrypt(backupData, password)
    SecurityManager-->>BackupManager: encrypted backup
    BackupManager-->>SettingsViewModel: export result
    SettingsViewModel-->>ExportDialog: backup created
    
    %% Initial Setup Flow
    participant SetupActivity
    participant SetupViewModel
    
    %% First Launch Setup
    User->>SetupActivity: First App Launch
    SetupActivity->>SetupViewModel: isFirstLaunch()
    SetupViewModel-->>SetupActivity: true
    SetupActivity->>User: Show Welcome Screen
    User->>SetupActivity: Tap "Get Started"
    SetupActivity->>User: Show Create Master Password Screen
    User->>SetupActivity: Create Master Password
    SetupActivity->>SetupViewModel: setupMasterPassword(password)
    SetupViewModel->>MasterPasswordManager: setMasterPassword(password)
    MasterPasswordManager-->>SetupViewModel: setup complete
    SetupViewModel-->>SetupActivity: setup complete
    SetupActivity->>User: Show Biometric Setup Option
    
    alt Enable Biometrics
        User->>SetupActivity: Tap "Enable Biometrics"
        SetupActivity->>SetupViewModel: setupBiometricAuth()
        SetupViewModel->>AuthManager: setupBiometricAuth()
        AuthManager->>BiometricPrompt: showBiometricPrompt()
        BiometricPrompt-->>AuthManager: biometric setup complete
        AuthManager-->>SetupViewModel: biometric setup result
        SetupViewModel-->>SetupActivity: biometric setup complete
    else Skip Biometrics
        User->>SetupActivity: Tap "Skip"
    end
    
    SetupActivity->>MainActivity: Launch main app